package com.example.BookingRoom.ServiceImpl;

import com.example.BookingRoom.Entities.Etudiant;
import com.example.BookingRoom.Entities.Reservation;
import com.example.BookingRoom.Services.MessagerieService;
import lombok.RequiredArgsConstructor;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
public class MessagerieServiceImpl implements MessagerieService {

    private final JavaMailSender mailSender;

    @Override
    public void envoyerEmailEnAttente(Etudiant etudiant) {
        String sujet = "üì¨ Votre demande de r√©servation a √©t√© enregistr√©e";
        String corps = """
                Bonjour %s,

                Nous avons bien re√ßu votre demande de r√©servation de chambre √† l‚ÄôInstitut Universitaire Saint Jean.

                üëâ Votre demande est *en attente de validation*.

                ‚ö† Vous disposez d‚Äôun *d√©lai de 48 heures* pour :
                1. Effectuer le paiement du loyer et de la caution
                2. Et *d√©poser le re√ßu de paiement* √† la comptabilit√©

                Sans d√©p√¥t de re√ßu dans ce d√©lai, votre demande sera automatiquement annul√©e.

                Merci pour votre r√©activit√©,
                L‚Äô√©quipe Logement
                Institut Universitaire Saint Jean
                """.formatted(etudiant.getNom());
        envoyer(etudiant.getEmail(), sujet, corps);
    }

    @Override
    public void envoyerEmailEcheance(Etudiant etudiant, String dateLimite) {
        String sujet = "‚è∞ Dernier rappel : d√©posez votre re√ßu dans les 12h";
        String corps = """
                Bonjour %s,

                Votre demande de r√©servation est toujours *en attente de validation*, et le d√©lai de 48 heures arrive √† expiration.

                üìå Pour finaliser votre demande :
                - Vous devez avoir *effectu√© le paiement*
                - Et *d√©pos√© le re√ßu de paiement √† la comptabilit√©* avant %s

                Pass√© ce d√©lai, votre r√©servation sera automatiquement annul√©e.

                Si vous avez d√©j√† d√©pos√© le re√ßu, merci d‚Äôignorer ce message.

                Cordialement,
                Service Logement
                Institut Universitaire Saint Jean
                """.formatted(etudiant.getNom(), dateLimite);
        envoyer(etudiant.getEmail(), sujet, corps);
    }

    @Override
    public void envoyerEmailValidation(Reservation reservation) {
        String sujet = "üéâ Votre r√©servation est valid√©e !";
        String corps = """
                Bonjour %s,

                Votre paiement a √©t√© v√©rifi√© et votre re√ßu valid√© ‚úÖ
                Nous vous confirmons que votre r√©servation de chambre est *d√©finitivement accept√©e*.

                üìç Informations :
                - √âcole : %s
                - Fili√®re : %s
                - Chambre : %s
                - Emplacement : %s

                Vous recevrez votre cl√© par le service logement.

                Merci de votre confiance,
                Service Logement
                Institut Universitaire Saint Jean du Cameroun
                """.formatted(reservation.getEtudiant().getNom(), reservation.getEtudiant().getFiliere().getEcole().getNom(),
                reservation.getEtudiant().getFiliere().getNom(), reservation.getChambre().getNumero(), reservation.getEmplacementchambre());
        envoyer(reservation.getEtudiant().getEmail() , sujet, corps);
    }

    private void envoyer(String to, String sujet, String corps) {
        SimpleMailMessage message = new SimpleMailMessage();
        message.setFrom("ton.email@gmail.com"); // √Ä remplacer par ton adresse d'envoi
        message.setTo(to);
        message.setSubject(sujet);
        message.setText(corps);
        mailSender.send(message);
    }
}
